CMAKE_MINIMUM_REQUIRED(VERSION 3.10)
PROJECT(ospp)

FIND_PROGRAM(CMAKE_C_COMPILER gcc)
FIND_PROGRAM(CMAKE_CXX_COMPILER g++)
FIND_PROGRAM(CMAKE_LINKER ld)

SET(CMAKE_C_STANDARD_LIBRARIES "")
SET(CMAKE_CXX_STANDARD_LIBRARIES "")

SET(CMAKE_C_LINK_EXECUTABLE "<CMAKE_LINKER> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>")
SET(CMAKE_CXX_LINK_EXECUTABLE "${CMAKE_C_LINK_EXECUTABLE}")

SET(CMAKE_EXPORT_COMPILE_COMMANDS ON)

SET(CMAKE_C_STANDARD 99)
SET(CMAKE_C_FLAGS_RELEASE "-g0 -O2")
SET(CMAKE_C_FLAGS_DEBUG "-g3 -O0")
SET(CMAKE_C_FLAGS "-m32 -fpic -fno-pie -ffreestanding -fno-builtin -nostdlib -nostdinc -fno-stack-protector -fno-omit-frame-pointer -fno-asynchronous-unwind-tables -Wall -Wextra")

SET(CMAKE_CXX_STANDARD 20)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_FLAGS "${CMAKE_C_FLAGS} -fno-exceptions -fno-rtti")
SET(CMAKE_LINKER_FLAGS "-m elf_i386 -static -nostdlib")

SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/output)

ADD_SUBDIRECTORY(icxxabi)
ADD_SUBDIRECTORY(klibcpp)
ADD_SUBDIRECTORY(libbus)

ADD_DEFINITIONS(-DLOG_SHOW_FILE_LINE)
ADD_SUBDIRECTORY(kernel)

ADD_SUBDIRECTORY(modules)